@model List<MyBankingApp.Data.Entitites.Bankkonto>

@if (Model != null && Model.Any())
{
    @Html.DevExpress().GridView(settings =>
        {
            settings.Name = "BankkontenGrid";
            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

            // Callback-Routes
            settings.CallbackRouteValues = new { Controller = "Banking", Action = "BankkontenGridCallback" };

            // Features aktivieren
            settings.Settings.ShowGroupPanel = true;
            settings.Settings.ShowFilterRow = true;
            settings.Settings.ShowFooter = true;

            settings.SettingsBehavior.AllowGroup = true;
            settings.SettingsBehavior.AllowSort = true;
            settings.SettingsBehavior.AllowFocusedRow = true;
            settings.SettingsBehavior.AutoExpandAllGroups = true;

            // Paging
            settings.SettingsPager.Visible = true;
            settings.SettingsPager.PageSize = 10;
            settings.SettingsPager.PageSizeItemSettings.Visible = true;

            // Spalten definieren

            // Bank (Gruppiert)
            settings.Columns.Add(column =>
            {
                column.FieldName = "Bankname";
                column.Caption = "Bank";
                column.GroupIndex = 0;
                column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
            });

            // Kontoinhaber
            settings.Columns.Add(column =>
            {
                column.FieldName = "Kontoinhaber";
                column.Caption = "Kontoinhaber";
            });

            // IBAN
            settings.Columns.Add(column =>
            {
                column.FieldName = "IBAN";
                column.Caption = "IBAN";
                column.Width = System.Web.UI.WebControls.Unit.Percentage(25);
            });

            // Kontotyp
            settings.Columns.Add(column =>
            {
                column.FieldName = "Kontotyp";
                column.Caption = "Typ";
            });

            // Währung
            settings.Columns.Add(column =>
            {
                column.FieldName = "Waehrung";
                column.Caption = "Währung";
                column.Width = System.Web.UI.WebControls.Unit.Pixel(80);
            });

            // Saldo
            settings.Columns.Add(column =>
            {
                column.FieldName = "AktuellerSaldo";
                column.Caption = "Saldo";
                column.PropertiesEdit.DisplayFormatString = "C";

                // DataItem Template für farbige Anzeige
                column.SetDataItemTemplateContent(c =>
                {
                    var saldo = (decimal)DataBinder.Eval(c.DataItem, "AktuellerSaldo");
                    var cssClass = saldo >= 0 ? "text-success" : "text-danger";
                    Html.ViewContext.Writer.Write(string.Format("<strong class='{0}'>{1:C}</strong>", cssClass, saldo));
                });

                // Footer Summary
                settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "AktuellerSaldo").DisplayFormat = "Gesamt: {0:C}";
            });

            // Aktionen
            settings.Columns.Add(column =>
            {
                column.Caption = "Aktionen";
                column.Width = System.Web.UI.WebControls.Unit.Pixel(100);
                column.Settings.AllowSort = DevExpress.Utils.DefaultBoolean.False;
                column.Settings.AllowHeaderFilter = DevExpress.Utils.DefaultBoolean.False;

                column.SetDataItemTemplateContent(c =>
                {
                    var accountId = DataBinder.Eval(c.DataItem, "Id");
                    Html.ViewContext.Writer.Write(
                        "<a href='#' class='btn btn-sm btn-default' title='Details'><i class='fas fa-eye'></i></a> " +
                        "<a href='#' class='btn btn-sm btn-default' title='Transaktionen'><i class='fas fa-list'></i></a>"
                    );
                });
            });

            // Styling
            settings.Styles.Header.BackColor = System.Drawing.Color.FromArgb(249, 250, 251);
            settings.Styles.Header.Font.Bold = true;
            settings.Styles.Header.Border.BorderColor = System.Drawing.Color.FromArgb(229, 231, 235);

            settings.Styles.GroupRow.Font.Bold = true;
            settings.Styles.GroupRow.BackColor = System.Drawing.Color.FromArgb(243, 244, 246);

            settings.Styles.Footer.Font.Bold = true;
            settings.Styles.Footer.BackColor = System.Drawing.Color.FromArgb(249, 250, 251);

            settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.FromArgb(248, 249, 250);

        }).Bind(Model).GetHtml()
}
else
{
    <div style="text-align: center; padding: 40px; color: #6b7280;">
        <i class="fas fa-university fa-3x" style="color: #e5e7eb; margin-bottom: 20px; display: block;"></i>
        <h4>Keine Bankkonten gefunden</h4>
        <p>Fügen Sie Ihr erstes Bankkonto hinzu, um loszulegen.</p>
        <a href="#" class="btn btn-primary">
            <i class="fas fa-plus"></i> Bankkonto hinzufügen
        </a>
    </div>
}

<style type="text/css">
    .text-success {
        color: #10b981 !important;
    }

    .text-danger {
        color: #ef4444 !important;
    }

    .btn {
        padding: 4px 8px;
        margin: 0 2px;
        text-decoration: none;
        border-radius: 4px;
        display: inline-block;
        cursor: pointer;
    }

    .btn-default {
        background: #f3f4f6;
        color: #374151;
        border: 1px solid #e5e7eb;
    }

        .btn-default:hover {
            background: #e5e7eb;
            text-decoration: none;
        }

    .btn-primary {
        background: #2563eb;
        color: white;
        border: 1px solid #2563eb;
        padding: 8px 16px;
    }

        .btn-primary:hover {
            background: #1d4ed8;
            text-decoration: none;
        }
</style>