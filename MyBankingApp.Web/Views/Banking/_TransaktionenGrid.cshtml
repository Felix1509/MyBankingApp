@model List<MyBankingApp.Data.Entitites.Transaktion>

@if (Model != null && Model.Any())
{
    @Html.DevExpress().GridView(settings =>
        {
            settings.Name = "TransaktionenGrid";
            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

            // Callback-Routes für Sorting/Filtering
            settings.CallbackRouteValues = new { Controller = "Banking", Action = "TransaktionenGridCallback" };

            // Einfache Features aktivieren
            settings.SettingsBehavior.AllowSort = true;
            settings.Settings.ShowFilterRow = false; // Kompakt halten
            settings.Settings.ShowGroupPanel = false; // Kompakt halten

            // Spalten definieren
            settings.Columns.Add(column =>
            {
                column.FieldName = "Buchungsdatum";
                column.Caption = "Datum";
                column.Width = System.Web.UI.WebControls.Unit.Percentage(25);
                column.PropertiesEdit.DisplayFormatString = "dd.MM.yy";
            });

            settings.Columns.Add(column =>
            {
                column.FieldName = "Betrag";
                column.Caption = "Betrag";
                column.Width = System.Web.UI.WebControls.Unit.Percentage(30);
                column.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
                column.SetDataItemTemplateContent(container =>
                {
                    var amount = (decimal)DataBinder.Eval(container.DataItem, "Betrag");
                    var cssClass = amount >= 0 ? "text-success" : "text-danger";
                    var icon = amount >= 0 ? "▲" : "▼";
                    ViewContext.Writer.Write($"<span class='{cssClass}'>{icon} {amount:C}</span>");
                });
            });

            settings.Columns.Add(column =>
            {
                column.FieldName = "Verwendungszweck";
                column.Caption = "Zweck";
                column.Width = System.Web.UI.WebControls.Unit.Percentage(45);
                column.SetDataItemTemplateContent(container =>
                {
                    var description = DataBinder.Eval(container.DataItem, "Verwendungszweck")?.ToString() ?? "";
                    if (description.Length > 20)
                        description = description.Substring(0, 20) + "...";
                    ViewContext.Writer.Write($"<span title='{DataBinder.Eval(container.DataItem, "Verwendungszweck")}'>{description}</span>");
                });
            });

            // Grid-Einstellungen
            settings.SettingsPager.Visible = false; // Kompakt halten
            settings.Settings.ShowColumnHeaders = true;
            settings.SettingsBehavior.AllowSelectByRowClick = true;

            // Kompaktes Styling
            settings.Styles.Header.BackColor = System.Drawing.Color.FromArgb(52, 58, 64);
            settings.Styles.Header.ForeColor = System.Drawing.Color.White;
            settings.Styles.Header.Font.Bold = true;
            settings.Styles.Header.Font.Size = System.Web.UI.WebControls.FontUnit.Point(11);

            settings.Styles.Row.Font.Size = System.Web.UI.WebControls.FontUnit.Point(11);
            settings.Styles.AlternatingRow.BackColor = System.Drawing.Color.FromArgb(248, 249, 250);

        }).Bind(Model).GetHtml()
}
else
{
    <div class="text-center py-3">
        <i class="fas fa-history fa-2x text-muted mb-2"></i>
        <p class="text-muted">Keine Transaktionen vorhanden.</p>
    </div>
}

<style>
    .text-success {
        color: #28a745 !important;
    }

    .text-danger {
        color: #dc3545 !important;
    }
</style>