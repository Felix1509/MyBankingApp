@model List<MyBankingApp.Data.Entitites.Bankkonto>
@{
    ViewBag.Title = "Meine Bankkonten";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style type="text/css">
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

        .page-header h1 {
            margin: 0;
            font-size: 2rem;
            font-weight: 300;
        }

    .account-grid-section {
        background: white;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .section-header {
        padding: 25px 30px;
        border-bottom: 1px solid #e8ecf1;
        background: #fafbfc;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .section-header h3 {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
            color: #1a202c;
        }

    .section-body {
        padding: 0;
    }

    .btn-add-account {
        background: #10b981;
        color: white;
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-block;
    }

        .btn-add-account:hover {
            background: #059669;
            transform: translateY(-1px);
            text-decoration: none;
            color: white;
        }

    .stats-row {
        padding: 20px 30px;
        background: #f8fafc;
        border-bottom: 1px solid #e8ecf1;
    }

    .stat-item {
        text-align: center;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1a202c;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
</style>

<div class="container-fluid">
    <!-- Page Header -->
    <div class="page-header">
        <div class="d-flex justify-content-between align-items-center">
            <h1><i class="fas fa-university"></i> Meine Bankkonten</h1>
            <a href="@Url.Action("Create", "BankAccount")" class="btn-add-account">
                <i class="fas fa-plus"></i> Neues Konto hinzufügen
            </a>
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
        </div>
    }

    <!-- Account Grid Section -->
    <div class="account-grid-section">
        <div class="section-header">
            <h3><i class="fas fa-list"></i> Kontoübersicht</h3>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Stats Row -->
            <div class="stats-row">
                <div class="row">
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div class="stat-value">@Model.Count</div>
                            <div class="stat-label">Konten gesamt</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div class="stat-value">@Model.Sum(k => k.AktuellerSaldo).ToString("C")</div>
                            <div class="stat-label">Gesamtsaldo</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div class="stat-value">@Model.Select(k => k.Bankname).Distinct().Count()</div>
                            <div class="stat-label">Verschiedene Banken</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-item">
                            <div class="stat-value">@Model.Select(k => k.Waehrung).Distinct().Count()</div>
                            <div class="stat-label">Währungen</div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="section-body">
            @Html.Action("AccountGrid", "BankAccount")
        </div>
    </div>
</div>