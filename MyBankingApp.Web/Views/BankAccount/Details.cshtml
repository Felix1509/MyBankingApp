@model MyBankingApp.Web.ViewModels.BankAccountDetailsVM
@{
    ViewBag.Title = "Kontodetails";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style type="text/css">
    .details-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        position: relative;
        overflow: hidden;
    }

        .details-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 60%;
            height: 200%;
            background: rgba(255, 255, 255, 0.08);
            transform: rotate(35deg);
        }

    .header-content {
        position: relative;
        z-index: 1;
    }

    .bank-name {
        font-size: 1.5rem;
        font-weight: 300;
        margin: 0;
    }

    .account-holder {
        font-size: 2rem;
        font-weight: 600;
        margin: 5px 0;
    }

    .balance-display {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 20px 0 10px 0;
    }

    .info-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
        margin-bottom: 20px;
    }

    .card-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

        .card-title i {
            margin-right: 10px;
            color: #667eea;
        }

    .info-row {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #f3f4f6;
    }

        .info-row:last-child {
            border-bottom: none;
        }

    .info-label {
        color: #6b7280;
        font-weight: 500;
    }

    .info-value {
        color: #1f2937;
        font-weight: 600;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        text-align: center;
    }

    .stat-value {
        font-size: 1.75rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #6b7280;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-action {
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
        text-decoration: none;
        display: inline-block;
    }

    .btn-primary {
        background: #667eea;
        color: white;
    }

        .btn-primary:hover {
            background: #5a67d8;
        }

    .btn-secondary {
        background: #e5e7eb;
        color: #374151;
    }

        .btn-secondary:hover {
            background: #d1d5db;
        }

    .access-badge {
        display: inline-block;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
        background: #eef2ff;
        color: #4338ca;
    }

    .recent-transactions {
        max-height: 400px;
        overflow-y: auto;
    }

    .transaction-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid #f3f4f6;
    }

    .transaction-info {
        flex: 1;
    }

    .transaction-amount {
        font-weight: 700;
        font-size: 1.125rem;
    }

    .amount-positive {
        color: #10b981;
    }

    .amount-negative {
        color: #ef4444;
    }
</style>

<div class="container">
    <a href="@Url.Action("Index", "BankAccount")" class="btn btn-link" style="margin-bottom: 20px;">
        <i class="fas fa-arrow-left"></i> Zurück zur Übersicht
    </a>

    @if (Model?.Account != null)
    {
        <div class="details-header">
            <div class="header-content">
                <h1 class="bank-name">@Model.Account.Bankname</h1>
                <h2 class="account-holder">@Model.Account.Kontoinhaber</h2>
                <div class="balance-display">
                    @Model.Account.AktuellerSaldo.ToString("C")
                </div>
                <div>
                    <span class="access-badge">
                        <i class="fas fa-key"></i> @Model.AccessLevel
                    </span>
                </div>
            </div>
        </div>

        <!-- Statistiken -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-value">@Model.RecentTransactions.Count</div>
                <div class="stat-label">Transaktionen (30 Tage)</div>
            </div>
            <div class="stat-card">
                <div class="stat-value amount-positive">+@Math.Abs(Model.MonthlyStats?.TotalIncome ?? 0).ToString("C")</div>
                <div class="stat-label">Einnahmen (Monat)</div>
            </div>
            <div class="stat-card">
                <div class="stat-value amount-negative">-@Math.Abs(Model.MonthlyStats?.TotalExpenses ?? 0).ToString("C")</div>
                <div class="stat-label">Ausgaben (Monat)</div>
            </div>
            <div class="stat-card">
                <div class="stat-value">@Model.Account.Waehrung</div>
                <div class="stat-label">Währung</div>
            </div>
        </div>

        <div class="row">
            <!-- Kontoinformationen -->
            <div class="col-md-6">
                <div class="info-card">
                    <h3 class="card-title"><i class="fas fa-info-circle"></i> Kontoinformationen</h3>
                    <div class="info-row">
                        <span class="info-label">IBAN</span>
                        <span class="info-value">@Model.Account.IBAN</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">BIC</span>
                        <span class="info-value">@(string.IsNullOrEmpty(Model.Account.BIC) ? "-" : Model.Account.BIC)</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Kontotyp</span>
                        <span class="info-value">@Model.Account.Kontotyp</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">Kontonummer</span>
                        <span class="info-value">@(string.IsNullOrEmpty(Model.Account.Kontonummer) ? "-" : Model.Account.Kontonummer)</span>
                    </div>
                    <div class="info-row">
                        <span class="info-label">BLZ</span>
                        <span class="info-value">@(string.IsNullOrEmpty(Model.Account.BLZ) ? "-" : Model.Account.BLZ)</span>
                    </div>

                    <div class="action-buttons">
                        @if (Model.AccessLevel >= MyBankingApp.Common.Enums.Kontozugriffelevel.Admin)
                        {
                            <a href="@Url.Action("Edit", "BankAccount", new { id = Model.Account.Id })" class="btn-action btn-secondary">
                                <i class="fas fa-edit"></i> Bearbeiten
                            </a>
                            <a href="@Url.Action("ManageAccess", "BankAccount", new { id = Model.Account.Id })" class="btn-action btn-secondary">
                                <i class="fas fa-users"></i> Zugriff verwalten
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Letzte Transaktionen -->
            <div class="col-md-6">
                <div class="info-card">
                    <h3 class="card-title"><i class="fas fa-clock"></i> Letzte Transaktionen</h3>
                    <div class="recent-transactions">
                        @if (Model.RecentTransactions != null && Model.RecentTransactions.Any())
                        {
                            foreach (var transaction in Model.RecentTransactions.Take(10))
                            {
                                <div class="transaction-row">
                                    <div class="transaction-info">
                                        <div style="font-weight: 600;">@transaction.Verwendungszweck</div>
                                        <div style="font-size: 0.875rem; color: #6b7280;">
                                            @transaction.Buchungsdatum.ToString("dd.MM.yyyy") -
                                            @(transaction.IstGutschrift ? "Von: " + transaction.AbsenderName : "An: " + transaction.EmpfaengerName)
                                        </div>
                                    </div>
                                    <div class="transaction-amount @(transaction.IstGutschrift ? "amount-positive" : "amount-negative")">
                                        @(transaction.IstGutschrift ? "+" : "-")@Math.Abs(transaction.Betrag).ToString("C")
                                    </div>
                                </div>
                            }
                            <div style="text-align: center; margin-top: 20px;">
                                <a href="@Url.Action("Index", "Transaction", new { kontoId = Model.Account.Id })" class="btn-action btn-primary">
                                    Alle Transaktionen anzeigen
                                </a>
                            </div>
                        }
                        else
                        {
                            <p style="text-align: center; color: #6b7280; padding: 40px 0;">
                                Noch keine Transaktionen vorhanden
                            </p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="info-card">
            <h3 class="card-title"><i class="fas fa-bolt"></i> Schnellaktionen</h3>
            <div class="action-buttons">
                @if (Model.AccessLevel >= MyBankingApp.Common.Enums.Kontozugriffelevel.Zahlungsfunktion)
                {
                    <a href="@Url.Action("Create", "Transaction", new { fromAccountId = Model.Account.Id })" class="btn-action btn-primary">
                        <i class="fas fa-paper-plane"></i> Neue Überweisung
                    </a>
                }
                <a href="@Url.Action("Index", "Transaction", new { kontoId = Model.Account.Id })" class="btn-action btn-secondary">
                    <i class="fas fa-list"></i> Transaktionen
                </a>
                <button onclick="window.print();" class="btn-action btn-secondary">
                    <i class="fas fa-print"></i> Drucken
                </button>
            </div>
        </div>
    }
    else
    {
        <div class="info-card">
            <p style="text-align: center; color: #6b7280;">Konto nicht gefunden.</p>
        </div>
    }
</div>